/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package assignment;

import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import static com.itextpdf.text.Element.ALIGN_CENTER;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Image;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import com.itextpdf.text.pdf.draw.VerticalPositionMark;
import java.awt.Desktop;
import java.awt.Font;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;

/**
 *
 * @author ANTHONY LAWRENCE
 */
public class Menu extends javax.swing.JFrame {
     Connection con;
    PreparedStatement pst;
boolean blast;
  Statement st;//execute sql statement less of optimised
  String cs; //holding path of the database
  String user;//username for the database
  String password;//password for the database
 String query;
  String records;
boolean bnext;
String previous;
String last;
String netx;
    ResultSet rs;
      Boolean bprevious = true;
    Country txtCountryname;
    Country txtCountrycode;
    /**
     * Creates new form Menu
     */
    public Menu() {
           initComponents();
         con = null;
             st = null;
            blast =false;
   bnext =false;
    
    cs = "jdbc:mysql://localhost:3306/tour_and_travel_information_management_system";
    user = "root";
    password = "";
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        hotel = new javax.swing.JMenu();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem14 = new javax.swing.JMenuItem();
        jMenuItem18 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenuItem11 = new javax.swing.JMenuItem();
        jMenuItem12 = new javax.swing.JMenuItem();
        jMenuItem20 = new javax.swing.JMenuItem();
        jMenuItem13 = new javax.swing.JMenuItem();
        jMenuItem19 = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem21 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem22 = new javax.swing.JMenuItem();
        jMenuItem23 = new javax.swing.JMenuItem();
        jMenuItem24 = new javax.swing.JMenuItem();
        jMenuItem25 = new javax.swing.JMenuItem();
        jMenuItem15 = new javax.swing.JMenuItem();
        jMenu6 = new javax.swing.JMenu();
        jMenuItem26 = new javax.swing.JMenuItem();
        jMenuItem16 = new javax.swing.JMenuItem();
        jMenuItem27 = new javax.swing.JMenuItem();
        jMenu7 = new javax.swing.JMenu();
        jMenuItem28 = new javax.swing.JMenuItem();
        jMenuItem17 = new javax.swing.JMenuItem();
        jMenuItem29 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\musan\\OneDrive\\Desktop\\menu1.jpg")); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -20, 400, 300));

        jMenu1.setText("File");

        jMenuItem1.setText("Country");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Cities");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem4.setText("Recreation centers");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenu3.setText("Areas of interest");

        jMenuItem5.setText("Things of interest");
        jMenu3.add(jMenuItem5);

        jMenuItem6.setText("Photos");
        jMenu3.add(jMenuItem6);

        jMenuItem7.setText("Transport");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem7);

        hotel.setText("hotels data");

        jMenuItem8.setText("Restaurants");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        hotel.add(jMenuItem8);

        jMenuItem9.setText("Visitor comments");
        hotel.add(jMenuItem9);

        jMenuItem14.setText("Security contacts");
        hotel.add(jMenuItem14);

        jMenuItem18.setText("Hotels");
        jMenuItem18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem18ActionPerformed(evt);
            }
        });
        hotel.add(jMenuItem18);

        jMenu3.add(hotel);

        jMenu2.setText("Hospital data");

        jMenuItem10.setText("Hospitals");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem10);

        jMenuItem11.setText("Pharmacy");
        jMenuItem11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem11ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem11);

        jMenuItem12.setText("Visitor comments");
        jMenuItem12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem12ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem12);

        jMenuItem20.setText("Security contacts");
        jMenu2.add(jMenuItem20);

        jMenu3.add(jMenu2);

        jMenuItem13.setText("Tourist attractions");
        jMenuItem13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem13ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem13);

        jMenuItem19.setText("Culture");
        jMenuItem19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem19ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem19);

        jMenu1.add(jMenu3);

        jMenuBar1.add(jMenu1);

        jMenu5.setText("Reports");

        jMenuItem3.setText("Restaurants");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem3);

        jMenuItem21.setText("Transport");
        jMenuItem21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem21ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem21);

        jMenu4.setText("Country Reports");

        jMenuItem22.setText("All country data");
        jMenuItem22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem22ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem22);

        jMenuItem23.setText("Usernames");
        jMenuItem23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem23ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem23);

        jMenuItem24.setText("Country codes");
        jMenuItem24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem24ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem24);

        jMenuItem25.setText("Country names");
        jMenuItem25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem25ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem25);

        jMenuItem15.setText("Country names and codes");
        jMenuItem15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem15ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem15);

        jMenu5.add(jMenu4);

        jMenu6.setText("City Reports");

        jMenuItem26.setText("All City Records");
        jMenuItem26.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem26ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem26);

        jMenuItem16.setText("City names");
        jMenuItem16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem16ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem16);

        jMenuItem27.setText("City locations");
        jMenuItem27.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem27ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem27);

        jMenu5.add(jMenu6);

        jMenu7.setText("Hotel Reports");

        jMenuItem28.setText("All Hotel Data");
        jMenuItem28.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem28ActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItem28);

        jMenuItem17.setText("Hotel Names");
        jMenuItem17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem17ActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItem17);

        jMenuItem29.setText("Hotel names and locations");
        jMenuItem29.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem29ActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItem29);

        jMenu5.add(jMenu7);

        jMenuBar1.add(jMenu5);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        //code to the transport frame
        Transport tp = new Transport();
        tp.show();
        dispose();
        
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem13ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem13ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        Country c = new Country();
        c.show();
        dispose();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        Cities cty = new Cities();
        cty.show();
        dispose();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
       //code for the pdf report of the restaurants
           try{
    Class.forName("com.mysql.jdbc.Driver");//registers the jdbc Driver
    con=DriverManager.getConnection(cs,user,password);
    st=con.createStatement();
      } catch(SQLException | ClassNotFoundException ex){
      ex.printStackTrace();
      }
    
    
    String RESULT="Restaurants.pdf";
       
    Document document=new Document(PageSize.A5.rotate());
    try {
        PdfWriter.getInstance(document, new FileOutputStream(RESULT));//Need to write in a table
    } catch (DocumentException | FileNotFoundException ex) {
        
    }
    
       document.open();
       try{
       Image image = Image.getInstance("logo1.jpg");
       image.setAlignment(ALIGN_CENTER);
       document.add((Element) image);
       
      Paragraph p = new Paragraph("Tour And Travel Information Management System",FontFactory.getFont(FontFactory.TIMES_BOLD, 12, Font.ITALIC, BaseColor.BLACK));
   Paragraph p1 = new Paragraph("email: travellords@gmail.com");
    Paragraph p2 = new Paragraph("Contact us: +256 702170980/+256 777941847");
   Paragraph pp = new Paragraph(" ");
       document.add(p);
       document.add(p1);
       document.add(p2);
      document.add(pp);
    
       }catch(Exception ex){
       ex.printStackTrace();
       }
       PdfPTable table = new PdfPTable(6);//create table with 6 columns
            PdfPCell cell = new PdfPCell(new Paragraph("RECORDS ABOUT RESTAURANTS"));
       try{
       query="select * from restaurants";
       rs = st.executeQuery(query);  
  
       cell.setColspan(6);
       cell.setHorizontalAlignment(Element.ALIGN_CENTER);
       cell.setBackgroundColor(BaseColor.ORANGE);
       table.addCell(cell);
       table.addCell("restaurant name");
       table.addCell("restaurant address");
       table.addCell("room prices");
       table.addCell("contacts");
       table.addCell("Hotel name");
       table.addCell("Area of interest");
    while(rs.next())
       {
       table.addCell(rs.getString("restuarant name"));
       table.addCell(rs.getString("restaurant address"));
       table.addCell(rs.getString("room prices"));
       table.addCell(rs.getString("contacts"));
       table.addCell(rs.getString("Hotel name"));
       table.addCell(rs.getString("Area of interest"));
       }
       document.add(table);
        DateFormat df = new SimpleDateFormat("dd/MM/yy");
       Calendar calobj = Calendar.getInstance();
       String cal1 = df.format(calobj.getTime()).toString();
       
       Chunk glue1 = new Chunk(new VerticalPositionMark());
       Paragraph plot1 = new Paragraph("Generated by: MUSANJE ANTHONY LAWRENCE",FontFactory.getFont(FontFactory.TIMES_BOLD, 15, Font.ITALIC, BaseColor.BLACK));
       plot1.add(new Chunk(glue1));
       plot1.add("Date of issue: " +cal1 + "");
       document.add(plot1);
       
        document.close();
      
       if(Desktop.isDesktopSupported()){
       try{
       File myfile = new File("Restaurants.pdf");
       Desktop.getDesktop().open(myfile);
             }
       catch(IOException | RuntimeException ex){}
       }
       document.close();//close a pdf document
       
    } catch (SQLException | DocumentException ex) {
        
    } 
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        //code to take us to the restauranst frame
        Restaurants re = new Restaurants();
        re.show();
        dispose();
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jMenuItem18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem18ActionPerformed
        //code to the Hotels frame 
        Hotels hot = new Hotels();
        hot.show();
        dispose();
    }//GEN-LAST:event_jMenuItem18ActionPerformed

    private void jMenuItem11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem11ActionPerformed
        // creating object to link to the pharmacy frame
        Pharmacy pp = new Pharmacy();
        pp.show();
        dispose();
    }//GEN-LAST:event_jMenuItem11ActionPerformed

    private void jMenuItem12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem12ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem12ActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
       // code to take us to the hospital frame
        Hospitals ho = new Hospitals();
        ho.show();
        dispose();
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void jMenuItem19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem19ActionPerformed
        //code to the culture frame
        Culture c = new Culture();
        c.show();
        dispose();
    }//GEN-LAST:event_jMenuItem19ActionPerformed

    private void jMenuItem21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem21ActionPerformed
          try{
    Class.forName("com.mysql.jdbc.Driver");//registers the jdbc Driver
    con=DriverManager.getConnection(cs,user,password);
    st=con.createStatement();
      } catch(SQLException | ClassNotFoundException ex){
      ex.printStackTrace();
      }
    
    
    String RESULT="Transport.pdf";
       
    Document document=new Document(PageSize.A5.rotate());
    try {
        PdfWriter.getInstance(document, new FileOutputStream(RESULT));//Need to write in a table
    } catch (DocumentException | FileNotFoundException ex) {
        
    }
    
       document.open();
       try{
       Image image = Image.getInstance("logo1.jpg");
       image.setAlignment(ALIGN_CENTER);
       document.add((Element) image);
       
      Paragraph p = new Paragraph("Tour And Travel Information Management System",FontFactory.getFont(FontFactory.TIMES_BOLD, 12, Font.ITALIC, BaseColor.BLACK));
   Paragraph p1 = new Paragraph("email: travellords@gmail.com");
    Paragraph p2 = new Paragraph("Contact us: +256 702170980/+256 777841847");
   Paragraph pp = new Paragraph(" ");
       document.add(p);
       document.add(p1);
       document.add(p2);
      document.add(pp);
    
       }catch(Exception ex){
       ex.printStackTrace();
       }
       PdfPTable table = new PdfPTable(3);//create table with 3 columns
            PdfPCell cell = new PdfPCell(new Paragraph("RECORDS ABOUT THE TRANSPORT DETAILS REGISTERED"));
       try{
       query="select * from Transport";
       rs = st.executeQuery(query);  
  
       cell.setColspan(4);
       cell.setHorizontalAlignment(Element.ALIGN_CENTER);
       cell.setBackgroundColor(BaseColor.GREEN);
       table.addCell(cell);
       table.addCell("Transport type");
       table.addCell("Driver first name");
       table.addCell("Driver last name" +"(s)");
       table.addCell("Phone numbers");
       table.addCell("Area of interest");
    while(rs.next())
       {
       table.addCell(rs.getString("transport_name"));
       table.addCell(rs.getString("driver_first_name"));
       table.addCell(rs.getString("driver_last_name"));
       table.addCell(rs.getString("phone_numbers"));
       table.addCell(rs.getString("Things_of_interest_toi_name"));
       }
       document.add(table);
        DateFormat df = new SimpleDateFormat("dd/MM/yy");
       Calendar calobj = Calendar.getInstance();
       String cal1 = df.format(calobj.getTime()).toString();
       
       Chunk glue1 = new Chunk(new VerticalPositionMark());
       Paragraph plot1 = new Paragraph("Generated by: MUSANJE ANTHONY LAWRENCE",FontFactory.getFont(FontFactory.TIMES_BOLD, 15, Font.ITALIC, BaseColor.BLACK));
       plot1.add(new Chunk(glue1));
       plot1.add("Date of issue: " +cal1 + "");
       document.add(plot1);
       
        document.close();
      
       if(Desktop.isDesktopSupported()){
       try{
       File myfile = new File("Transport.pdf");
       Desktop.getDesktop().open(myfile);
             }
       catch(IOException | RuntimeException ex){}
       }
       document.close();//close a pdf document
       
    } catch (SQLException | DocumentException ex) {
        
    } 
             
    }//GEN-LAST:event_jMenuItem21ActionPerformed

    private void jMenuItem22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem22ActionPerformed
        try{
    Class.forName("com.mysql.jdbc.Driver");//registers the jdbc Driver
    con=DriverManager.getConnection(cs,user,password);
    st=con.createStatement();
      } catch(SQLException | ClassNotFoundException ex){
      ex.printStackTrace();
      }
    
    
    String RESULT="Country.pdf";
       
    Document document=new Document(PageSize.A5.rotate());
    try {
        PdfWriter.getInstance(document, new FileOutputStream(RESULT));//Need to write in a table
    } catch (DocumentException | FileNotFoundException ex) {
        
    }
    
       document.open();
       
       try{
       Image image = Image.getInstance("logo1.jpg");
       image.setAlignment(ALIGN_CENTER);
       document.add((Element) image);
       
      Paragraph p = new Paragraph("                 Tour And Travel Information Management System",FontFactory.getFont(FontFactory.TIMES_BOLD, 12, Font.ITALIC, BaseColor.BLACK));
   Paragraph p1 = new Paragraph("                   email: travellords@gmail.com");
    Paragraph p2 = new Paragraph("                  Contact us: +256 702170980/+256 777941847");
   Paragraph pp = new Paragraph(" ");
       document.add(p);
       document.add(p1);
       document.add(p2);
      document.add(pp);
    
       }catch(Exception ex){
       ex.printStackTrace();
       }
       PdfPTable table = new PdfPTable(3);//create table with 3 columns
            PdfPCell cell = new PdfPCell(new Paragraph("RECORDS ABOUT COUNTRIES"));
       try{
       query="select * from Country";
       rs = st.executeQuery(query);  

       cell.setColspan(4);
       cell.setHorizontalAlignment(Element.ALIGN_CENTER);
       cell.setBackgroundColor(BaseColor.ORANGE);
       table.addCell(cell);
       table.addCell("Country_name");
       table.addCell("Country_code");
       table.addCell("login_username");
    while(rs.next())
       {
       table.addCell(rs.getString("Country_name"));
       table.addCell(rs.getString("Country_code"));
       table.addCell(rs.getString("login_username"));
       }
       document.add(table);
      DateFormat df = new SimpleDateFormat("dd/MM/yy");
       Calendar calobj = Calendar.getInstance();
       String cal1 = df.format(calobj.getTime()).toString();
       
       Chunk glue1 = new Chunk(new VerticalPositionMark());
       Paragraph plot1 = new Paragraph("Generated by: MUSANJE ANTHONY LAWRENCE",FontFactory.getFont(FontFactory.TIMES_BOLD, 12, Font.ITALIC, BaseColor.RED));
       plot1.add(new Chunk(glue1));
       plot1.add("Date of issue: " +cal1 + "");
       document.add(plot1);
        document.close();
      
       if(Desktop.isDesktopSupported()){   
       try{
       File myfile = new File("Country.pdf");
       Desktop.getDesktop().open(myfile);
             }
       catch(IOException | RuntimeException ex){}
       }
       document.close();//close a pdf document
       
    } catch (SQLException | DocumentException ex) {
        
    }   
    }//GEN-LAST:event_jMenuItem22ActionPerformed

    private void jMenuItem25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem25ActionPerformed
         try{
    Class.forName("com.mysql.jdbc.Driver");//registers the jdbc Driver
    con=DriverManager.getConnection(cs,user,password);
    st=con.createStatement();
      } catch(SQLException | ClassNotFoundException ex){
      ex.printStackTrace();
      }
    
    
    String RESULT="Country_names.pdf";
       
    Document document=new Document(PageSize.A5.rotate());
    try {
        PdfWriter.getInstance(document, new FileOutputStream(RESULT));//Need to write in a table
    } catch (DocumentException | FileNotFoundException ex) {
        
    }
    
       document.open();
       
       try{
       Image image = Image.getInstance("logo1.jpg");
       image.setAlignment(ALIGN_CENTER);
       document.add((Element) image);
       
      Paragraph p = new Paragraph("                 Tour And Travel Information Management System",FontFactory.getFont(FontFactory.TIMES_BOLD, 12, Font.ITALIC, BaseColor.BLACK));
   Paragraph p1 = new Paragraph("                   email: travellords@gmail.com");
    Paragraph p2 = new Paragraph("                  Contact us: +256 702170980/+256 777941847");
   Paragraph pp = new Paragraph(" ");
       document.add(p);
       document.add(p1);
       document.add(p2);
      document.add(pp);
    
       }catch(Exception ex){
       ex.printStackTrace();
       }
       PdfPTable table = new PdfPTable(1);//create table with 3 columns
            PdfPCell cell = new PdfPCell(new Paragraph("RECORDS ABOUT COUNTRY NAMES"));
       try{
       query="select Country_name from Country";
       rs = st.executeQuery(query);  

       cell.setColspan(2);
       cell.setHorizontalAlignment(Element.ALIGN_CENTER);
       cell.setBackgroundColor(BaseColor.ORANGE);
       table.addCell(cell);
    while(rs.next())
       {
       table.addCell(rs.getString("Country_name"));
       }
       document.add(table);
      DateFormat df = new SimpleDateFormat("dd/MM/yy");
       Calendar calobj = Calendar.getInstance();
       String cal1 = df.format(calobj.getTime()).toString();
       
       Chunk glue1 = new Chunk(new VerticalPositionMark());
       Paragraph plot1 = new Paragraph("Generated by: MUSANJE ANTHONY LAWRENCE",FontFactory.getFont(FontFactory.TIMES_BOLD, 12, Font.ITALIC, BaseColor.RED));
       plot1.add(new Chunk(glue1));
       plot1.add("Date of issue: " +cal1 + "");
       document.add(plot1);
        document.close();
      
       if(Desktop.isDesktopSupported()){   
       try{
       File myfile = new File("Country_names.pdf");
       Desktop.getDesktop().open(myfile);
             }
       catch(IOException | RuntimeException ex){}
       }
       document.close();//close a pdf document
       
    } catch (SQLException | DocumentException ex) {
        
    } 
    }//GEN-LAST:event_jMenuItem25ActionPerformed

    private void jMenuItem24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem24ActionPerformed
        try{
    Class.forName("com.mysql.jdbc.Driver");//registers the jdbc Driver
    con=DriverManager.getConnection(cs,user,password);
    st=con.createStatement();
      } catch(SQLException | ClassNotFoundException ex){
      ex.printStackTrace();
      }
    
    
    String RESULT="Country_codes.pdf";
       
    Document document=new Document(PageSize.A5.rotate());
    try {
        PdfWriter.getInstance(document, new FileOutputStream(RESULT));//Need to write in a table
    } catch (DocumentException | FileNotFoundException ex) {
        
    }
    
       document.open();
       
       try{
       Image image = Image.getInstance("logo1.jpg");
       image.setAlignment(ALIGN_CENTER);
       document.add((Element) image);
       
      Paragraph p = new Paragraph("                 Tour And Travel Information Management System",FontFactory.getFont(FontFactory.TIMES_BOLD, 12, Font.ITALIC, BaseColor.BLACK));
   Paragraph p1 = new Paragraph("                   email: travellords@gmail.com");
    Paragraph p2 = new Paragraph("                  Contact us: +256 702170980/+256 777941847");
   Paragraph pp = new Paragraph(" ");
       document.add(p);
       document.add(p1);
       document.add(p2);
      document.add(pp);
    
       }catch(Exception ex){
       ex.printStackTrace();
       }
       PdfPTable table = new PdfPTable(1);//create table with 3 columns
            PdfPCell cell = new PdfPCell(new Paragraph("RECORDS ABOUT COUNTRY CODES"));
       try{
       query="select Country_code from Country";
       rs = st.executeQuery(query);  

       cell.setColspan(1);
       cell.setHorizontalAlignment(Element.ALIGN_CENTER);
       cell.setBackgroundColor(BaseColor.ORANGE);
       table.addCell(cell);
       table.addCell("Country_code");
    while(rs.next())
       {
       table.addCell(rs.getString("Country_code"));
       }
       document.add(table);
      DateFormat df = new SimpleDateFormat("dd/MM/yy");
       Calendar calobj = Calendar.getInstance();
       String cal1 = df.format(calobj.getTime()).toString();
       
       Chunk glue1 = new Chunk(new VerticalPositionMark());
       Paragraph plot1 = new Paragraph("Generated by: MUSANJE ANTHONY LAWRENCE",FontFactory.getFont(FontFactory.TIMES_BOLD, 12, Font.ITALIC, BaseColor.RED));
       plot1.add(new Chunk(glue1));
       plot1.add("Date of issue: " +cal1 + "");
       document.add(plot1);
        document.close();
      
       if(Desktop.isDesktopSupported()){   
       try{
       File myfile = new File("Country_codes.pdf");
       Desktop.getDesktop().open(myfile);
             }
       catch(IOException | RuntimeException ex){}
       }
       document.close();//close a pdf document
       
    } catch (SQLException | DocumentException ex) {
        
    } 
    }//GEN-LAST:event_jMenuItem24ActionPerformed

    private void jMenuItem23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem23ActionPerformed
       try{
    Class.forName("com.mysql.jdbc.Driver");//registers the jdbc Driver
    con=DriverManager.getConnection(cs,user,password);
    st=con.createStatement();
      } catch(SQLException | ClassNotFoundException ex){
      ex.printStackTrace();
      }
    
    
    String RESULT="Users.pdf";
       
    Document document=new Document(PageSize.A5.rotate());
    try {
        PdfWriter.getInstance(document, new FileOutputStream(RESULT));//Need to write in a table
    } catch (DocumentException | FileNotFoundException ex) {
        
    }
    
       document.open();
       
       try{
       Image image = Image.getInstance("logo1.jpg");
       image.setAlignment(ALIGN_CENTER);
       document.add((Element) image);
       
      Paragraph p = new Paragraph("                 Tour And Travel Information Management System",FontFactory.getFont(FontFactory.TIMES_BOLD, 12, Font.ITALIC, BaseColor.BLACK));
   Paragraph p1 = new Paragraph("                   email: travellords@gmail.com");
    Paragraph p2 = new Paragraph("                  Contact us: +256 702170980/+256 777941847");
   Paragraph pp = new Paragraph(" ");
       document.add(p);
       document.add(p1);
       document.add(p2);
      document.add(pp);
    
       }catch(Exception ex){
       ex.printStackTrace();
       }
       PdfPTable table = new PdfPTable(1);//create table with 1 columns
            PdfPCell cell = new PdfPCell(new Paragraph("RECORDS ABOUT USERS WHO LOGGED IN"));
       try{
       query="select distinct(login_username) from Country";
       rs = st.executeQuery(query);  

       cell.setColspan(1);
       cell.setHorizontalAlignment(Element.ALIGN_CENTER);
       cell.setBackgroundColor(BaseColor.ORANGE);
       table.addCell(cell);
       table.addCell("Usernames");
    while(rs.next())
       {
       table.addCell(rs.getString("login_username"));
       }
       document.add(table);
      DateFormat df = new SimpleDateFormat("dd/MM/yy");
       Calendar calobj = Calendar.getInstance();
       String cal1 = df.format(calobj.getTime()).toString();
       
       Chunk glue1 = new Chunk(new VerticalPositionMark());
       Paragraph plot1 = new Paragraph("Generated by: MUSANJE ANTHONY LAWRENCE",FontFactory.getFont(FontFactory.TIMES_BOLD, 12, Font.ITALIC, BaseColor.RED));
       plot1.add(new Chunk(glue1));
       plot1.add("Date of issue: " +cal1 + "");
       document.add(plot1);
        document.close();
      
       if(Desktop.isDesktopSupported()){   
       try{
       File myfile = new File("Users.pdf");
       Desktop.getDesktop().open(myfile);
             }
       catch(IOException | RuntimeException ex){}
       }
       document.close();//close a pdf document
       
    } catch (SQLException | DocumentException ex) {
        
    } 
    }//GEN-LAST:event_jMenuItem23ActionPerformed

    private void jMenuItem15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem15ActionPerformed
            try{
    Class.forName("com.mysql.jdbc.Driver");//registers the jdbc Driver
    con=DriverManager.getConnection(cs,user,password);
    st=con.createStatement();
      } catch(SQLException | ClassNotFoundException ex){
      ex.printStackTrace();
      }
    
    
    String RESULT="Country and code";
       
    Document document=new Document(PageSize.A5.rotate());
    try {
        PdfWriter.getInstance(document, new FileOutputStream(RESULT));//Need to write in a table
    } catch (DocumentException | FileNotFoundException ex) {
        
    }
    
       document.open();
       
       try{
       Image image = Image.getInstance("logo1.jpg");
       image.setAlignment(ALIGN_CENTER);
       document.add((Element) image);
       
      Paragraph p = new Paragraph("                 Tour And Travel Information Management System",FontFactory.getFont(FontFactory.TIMES_BOLD, 12, Font.ITALIC, BaseColor.BLACK));
   Paragraph p1 = new Paragraph("                   email: travellords@gmail.com");
    Paragraph p2 = new Paragraph("                  Contact us: +256 702170980/+256 777941847");
   Paragraph pp = new Paragraph(" ");
       document.add(p);
       document.add(p1);
       document.add(p2);
      document.add(pp);
    
       }catch(Exception ex){
       ex.printStackTrace();
       }
       PdfPTable table = new PdfPTable(3);//create table with 3 columns
            PdfPCell cell = new PdfPCell(new Paragraph("RECORDS ABOUT COUNTRIES"));
       try{
       query="select Country_name,Country_code from Country";
       rs = st.executeQuery(query);  

       cell.setColspan(4);
       cell.setHorizontalAlignment(Element.ALIGN_CENTER);
       cell.setBackgroundColor(BaseColor.ORANGE);
       table.addCell(cell);
       table.addCell("Country_name");
       table.addCell("Country_code");
    while(rs.next())
       {
       table.addCell(rs.getString("Country_name"));
       table.addCell(rs.getString("Country_code"));
       }
       document.add(table);
      DateFormat df = new SimpleDateFormat("dd/MM/yy");
       Calendar calobj = Calendar.getInstance();
       String cal1 = df.format(calobj.getTime()).toString();
       
       Chunk glue1 = new Chunk(new VerticalPositionMark());
       Paragraph plot1 = new Paragraph("Generated by: MUSANJE ANTHONY LAWRENCE",FontFactory.getFont(FontFactory.TIMES_BOLD, 12, Font.ITALIC, BaseColor.RED));
       plot1.add(new Chunk(glue1));
       plot1.add("Date of issue: " +cal1 + "");
       document.add(plot1);
        document.close();
      
       if(Desktop.isDesktopSupported()){   
       try{
       File myfile = new File("Country and code.pdf");
       Desktop.getDesktop().open(myfile);
             }
       catch(IOException | RuntimeException ex){}
       }
       document.close();//close a pdf document
       
    } catch (SQLException | DocumentException ex) {
        
    } 
    }//GEN-LAST:event_jMenuItem15ActionPerformed

    private void jMenuItem26ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem26ActionPerformed
            try{
    Class.forName("com.mysql.jdbc.Driver");//registers the jdbc Driver
    con=DriverManager.getConnection(cs,user,password);
    st=con.createStatement();
      } catch(SQLException | ClassNotFoundException ex){
      ex.printStackTrace();
      }
    
    
    String RESULT="Cities.pdf";
       
    Document document=new Document(PageSize.A5.rotate());
    try {
        PdfWriter.getInstance(document, new FileOutputStream(RESULT));//Need to write in a table
    } catch (DocumentException | FileNotFoundException ex) {
        
    }
    
       document.open();
       try{
       Image image = Image.getInstance("logo1.jpg");
       image.setAlignment(ALIGN_CENTER);
       document.add((Element) image);
       
      Paragraph p = new Paragraph("Tour And Travel Information Management System",FontFactory.getFont(FontFactory.TIMES_BOLD, 12, Font.ITALIC, BaseColor.BLACK));
   Paragraph p1 = new Paragraph("email: travellords@gmail.com");
    Paragraph p2 = new Paragraph("Contact us: +256 702170980/+256 777941847");
   Paragraph pp = new Paragraph(" ");
       document.add(p);
       document.add(p1);
       document.add(p2);
      document.add(pp);
    
       }catch(Exception ex){
       ex.printStackTrace();
       }
       PdfPTable table = new PdfPTable(3);//create table with 3 columns
            PdfPCell cell = new PdfPCell(new Paragraph("RECORDS ABOUT CITIES"));
       try{
       query="select * from Cities";
       rs = st.executeQuery(query);  
  
       cell.setColspan(3);
       cell.setHorizontalAlignment(Element.ALIGN_CENTER);
       cell.setBackgroundColor(BaseColor.ORANGE);
       table.addCell(cell);
       table.addCell("City name");
       table.addCell("City location");
       table.addCell("Country");
    while(rs.next())
       {
       table.addCell(rs.getString("city_name"));
       table.addCell(rs.getString("city_location"));
       table.addCell(rs.getString("Country_country_name"));
       }
       document.add(table);
       DateFormat df = new SimpleDateFormat("dd/MM/yy");
       Calendar calobj = Calendar.getInstance();
       String cal1 = df.format(calobj.getTime()).toString();
       
       Chunk glue1 = new Chunk(new VerticalPositionMark());
       Paragraph plot1 = new Paragraph("Generated by: MUSANJE ANTHONY LAWRENCE",FontFactory.getFont(FontFactory.TIMES_BOLD, 15, Font.ITALIC, BaseColor.BLACK));
       plot1.add(new Chunk(glue1));
       plot1.add("Date of issue: " +cal1 + "");
       document.add(plot1);
        document.close();
      
       if(Desktop.isDesktopSupported()){
       try{
       File myfile = new File("Cities.pdf");
       Desktop.getDesktop().open(myfile);
             }
       catch(IOException | RuntimeException ex){}
       }
       document.close();//close a pdf document
       
    } catch (SQLException | DocumentException ex) {
        
    } 
    }//GEN-LAST:event_jMenuItem26ActionPerformed

    private void jMenuItem16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem16ActionPerformed
       //code to print out the pdf of only the city names
             try{
    Class.forName("com.mysql.jdbc.Driver");//registers the jdbc Driver
    con=DriverManager.getConnection(cs,user,password);
    st=con.createStatement();
      } catch(SQLException | ClassNotFoundException ex){
      ex.printStackTrace();
      }
    
    
    String RESULT="City names.pdf";
       
    Document document=new Document(PageSize.A5.rotate());
    try {
        PdfWriter.getInstance(document, new FileOutputStream(RESULT));//Need to write in a table
    } catch (DocumentException | FileNotFoundException ex) {
        
    }
    
       document.open();
       try{
       Image image = Image.getInstance("logo1.jpg");
       image.setAlignment(ALIGN_CENTER);
       document.add((Element) image);
       
      Paragraph p = new Paragraph("Tour And Travel Information Management System",FontFactory.getFont(FontFactory.TIMES_BOLD, 12, Font.ITALIC, BaseColor.BLACK));
   Paragraph p1 = new Paragraph("email: travellords@gmail.com");
    Paragraph p2 = new Paragraph("Contact us: +256 702170980/+256 777941847");
   Paragraph pp = new Paragraph(" ");
       document.add(p);
       document.add(p1);
       document.add(p2);
      document.add(pp);
    
       }catch(Exception ex){
       ex.printStackTrace();
       }
       PdfPTable table = new PdfPTable(1);//create table with 3 columns
            PdfPCell cell = new PdfPCell(new Paragraph("RECORDS ABOUT CITY NAMES"));
       try{
       query="select city_name from Cities";
       rs = st.executeQuery(query);  
  
       cell.setColspan(1);
       cell.setHorizontalAlignment(Element.ALIGN_CENTER);
       cell.setBackgroundColor(BaseColor.ORANGE);
       table.addCell(cell);
       table.addCell("City name");
    while(rs.next())
       {
       table.addCell(rs.getString("city_name"));
       }
       document.add(table);
       DateFormat df = new SimpleDateFormat("dd/MM/yy");
       Calendar calobj = Calendar.getInstance();
       String cal1 = df.format(calobj.getTime()).toString();
       
       Chunk glue1 = new Chunk(new VerticalPositionMark());
       Paragraph plot1 = new Paragraph("Generated by: MUSANJE ANTHONY LAWRENCE",FontFactory.getFont(FontFactory.TIMES_BOLD, 15, Font.ITALIC, BaseColor.BLACK));
       plot1.add(new Chunk(glue1));
       plot1.add("Date of issue: " +cal1 + "");
       document.add(plot1);
        document.close();
      
       if(Desktop.isDesktopSupported()){
       try{
       File myfile = new File("City names.pdf");
       Desktop.getDesktop().open(myfile);
             }
       catch(IOException | RuntimeException ex){}
       }
       document.close();//close a pdf document
       
    } catch (SQLException | DocumentException ex) {
        
    } 
    }//GEN-LAST:event_jMenuItem16ActionPerformed

    private void jMenuItem27ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem27ActionPerformed
        //code to print out only the city locations
             try{
    Class.forName("com.mysql.jdbc.Driver");//registers the jdbc Driver
    con=DriverManager.getConnection(cs,user,password);
    st=con.createStatement();
      } catch(SQLException | ClassNotFoundException ex){
      ex.printStackTrace();
      }
    
    
    String RESULT="City location.pdf";
       
    Document document=new Document(PageSize.A5.rotate());
    try {
        PdfWriter.getInstance(document, new FileOutputStream(RESULT));//Need to write in a table
    } catch (DocumentException | FileNotFoundException ex) {
        
    }
    
       document.open();
       try{
       Image image = Image.getInstance("logo.jpg");
       image.setAlignment(ALIGN_CENTER);
       document.add((Element) image);
       
      Paragraph p = new Paragraph("Tour And Travel Information Management System",FontFactory.getFont(FontFactory.TIMES_BOLD, 12, Font.ITALIC, BaseColor.BLACK));
   Paragraph p1 = new Paragraph("email: travellords@gmail.com");
    Paragraph p2 = new Paragraph("Contact us: +256 702170980/+256 777941847");
   Paragraph pp = new Paragraph(" ");
       document.add(p);
       document.add(p1);
       document.add(p2);
      document.add(pp);
    
       }catch(Exception ex){
       ex.printStackTrace();
       }
       PdfPTable table = new PdfPTable(1);//create table with 3 columns
            PdfPCell cell = new PdfPCell(new Paragraph("RECORDS ABOUT CITY LOCATIONS"));
       try{
       query="select city_location from City";
       rs = st.executeQuery(query);  
  
       cell.setColspan(3);
       cell.setHorizontalAlignment(Element.ALIGN_CENTER);
       cell.setBackgroundColor(BaseColor.ORANGE);
       table.addCell(cell);
       table.addCell("City location");
    while(rs.next())
       {
       table.addCell(rs.getString("city_location"));
       }
       document.add(table);
       DateFormat df = new SimpleDateFormat("dd/MM/yy");
       Calendar calobj = Calendar.getInstance();
       String cal1 = df.format(calobj.getTime()).toString();
       
       Chunk glue1 = new Chunk(new VerticalPositionMark());
       Paragraph plot1 = new Paragraph("Generated by: MUSANJE ANTHONY LAWRENCE",FontFactory.getFont(FontFactory.TIMES_BOLD, 15, Font.ITALIC, BaseColor.BLACK));
       plot1.add(new Chunk(glue1));
       plot1.add("Date of issue: " +cal1 + "");
       document.add(plot1);
        document.close();
      
       if(Desktop.isDesktopSupported()){
       try{
       File myfile = new File("City location.pdf");
       Desktop.getDesktop().open(myfile);
             }
       catch(IOException | RuntimeException ex){}
       }
       document.close();//close a pdf document
       
    } catch (SQLException | DocumentException ex) {
        
    } 
    }//GEN-LAST:event_jMenuItem27ActionPerformed

    private void jMenuItem28ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem28ActionPerformed
         //code for pdf of hotels frame
         try{
    Class.forName("com.mysql.jdbc.Driver");//registers the jdbc Driver
    con=DriverManager.getConnection(cs,user,password);
    st=con.createStatement();
      } catch(SQLException | ClassNotFoundException ex){
      ex.printStackTrace();
      }
    
    
    String RESULT="Hotels.pdf";
       
    Document document=new Document (PageSize.A5.rotate());
    try {
        PdfWriter.getInstance(document, new FileOutputStream(RESULT));//Need to write in a table
    } catch (DocumentException | FileNotFoundException ex) {
        
    }
    
       document.open();
       try{
       Image image = Image.getInstance("logo.jpg");
       image.setAlignment(ALIGN_CENTER);
       document.add((Element) image);
       
      Paragraph p = new Paragraph("                 Tour And Travel Information Management System",FontFactory.getFont(FontFactory.TIMES_BOLD, 12, Font.ITALIC, BaseColor.BLACK));
   Paragraph p1 = new Paragraph("                   email: travellords@gmail.com");
    Paragraph p2 = new Paragraph("                  Contact us: +256 702170980/+256 777941847");
   Paragraph pp = new Paragraph(" ");
       document.add(p);
       document.add(p1);
       document.add(p2);
      document.add(pp);
    
       }catch(IOException | DocumentException ex){
       }
       PdfPTable table = new PdfPTable(4);//create table with 4 columns
        PdfPCell cell = new PdfPCell(new Paragraph("RECORDS ABOUT HOTELS"));
       try{
       query="select * from Hotels";
             ResultSet rs = st.executeQuery(query);
             cell.setColspan(4);
       cell.setHorizontalAlignment(Element.ALIGN_CENTER);
       cell.setBackgroundColor(BaseColor.GREEN);
       table.addCell(cell);
       table.addCell("hotel name");
       table.addCell("pets allowed(yes/no)");
       table.addCell("price range");
       table.addCell("City name");
       while(rs.next())
       {
       table.addCell(rs.getString("hotel_name"));
       table.addCell(rs.getString("pets_allowed_y/n"));
        table.addCell(rs.getString("price_range"));
        table.addCell(rs.getString("Cities_city_name"));
       }
       document.add(table);
       DateFormat df = new SimpleDateFormat("dd/MM/yy");
       Calendar calobj = Calendar.getInstance();
       String cal1 = df.format(calobj.getTime()).toString();
       
       Chunk glue1 = new Chunk(new VerticalPositionMark());
       Paragraph plot1 = new Paragraph("Generated by: MUSANJE ANTHONY LAWRENCE",FontFactory.getFont(FontFactory.TIMES_BOLD, 15, Font.ITALIC, BaseColor.BLACK));
       plot1.add(new Chunk(glue1));
       plot1.add("Date of issue: " +cal1 + "");
       document.add(plot1);
       
        document.close();
       
      
       
       if(Desktop.isDesktopSupported()){
       try{
       File myfile = new File("Hotels.pdf");
       Desktop.getDesktop().open(myfile);
             }
       catch(IOException ex){}
       }
       document.close();//close a pdf document
       
    } catch (SQLException | DocumentException ex) {
        
    }             
    }//GEN-LAST:event_jMenuItem28ActionPerformed

    private void jMenuItem17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem17ActionPerformed
      //code for hotel names only
         //code for pdf of hotels frame
         try{
    Class.forName("com.mysql.jdbc.Driver");//registers the jdbc Driver
    con=DriverManager.getConnection(cs,user,password);
    st=con.createStatement();
      } catch(SQLException | ClassNotFoundException ex){
      ex.printStackTrace();
      }
    
    
    String RESULT="Hotel Names.pdf";
       
    Document document=new Document (PageSize.A5.rotate());
    try {
        PdfWriter.getInstance(document, new FileOutputStream(RESULT));//Need to write in a table
    } catch (DocumentException | FileNotFoundException ex) {
        
    }
    
       document.open();
       try{
       Image image = Image.getInstance("logo.jpg");
       image.setAlignment(ALIGN_CENTER);
       document.add((Element) image);
       
      Paragraph p = new Paragraph("                 Tour And Travel Information Management System",FontFactory.getFont(FontFactory.TIMES_BOLD, 12, Font.ITALIC, BaseColor.BLACK));
   Paragraph p1 = new Paragraph("                   email: travellords@gmail.com");
    Paragraph p2 = new Paragraph("                  Contact us: +256 702170980/+256 777941847");
   Paragraph pp = new Paragraph(" ");
       document.add(p);
       document.add(p1);
       document.add(p2);
      document.add(pp);
    
       }catch(IOException | DocumentException ex){
       }
       PdfPTable table = new PdfPTable(1);//create table with 4 columns
        PdfPCell cell = new PdfPCell(new Paragraph("RECORDS ABOUT HOTEL NAMES"));
       try{
       query="select distinct(hotel_name) from Hotels";
             ResultSet rs = st.executeQuery(query);
             cell.setColspan(4);
       cell.setHorizontalAlignment(Element.ALIGN_CENTER);
       cell.setBackgroundColor(BaseColor.GREEN);
       table.addCell(cell);
       table.addCell("hotel name");
       while(rs.next())
       {
       table.addCell(rs.getString("hotel_name"));
       }
       document.add(table);
       DateFormat df = new SimpleDateFormat("dd/MM/yy");
       Calendar calobj = Calendar.getInstance();
       String cal1 = df.format(calobj.getTime()).toString();
       
       Chunk glue1 = new Chunk(new VerticalPositionMark());
       Paragraph plot1 = new Paragraph("Generated by: MUSANJE ANTHONY LAWRENCE",FontFactory.getFont(FontFactory.TIMES_BOLD, 15, Font.ITALIC, BaseColor.BLACK));
       plot1.add(new Chunk(glue1));
       plot1.add("Date of issue: " +cal1 + "");
       document.add(plot1);
       
        document.close();
       
      
       
       if(Desktop.isDesktopSupported()){
       try{
       File myfile = new File("Hotel Names.pdf");
       Desktop.getDesktop().open(myfile);
             }
       catch(IOException ex){}
       }
       document.close();//close a pdf document
       
    } catch (SQLException | DocumentException ex) {
        
    }             
    }//GEN-LAST:event_jMenuItem17ActionPerformed

    private void jMenuItem29ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem29ActionPerformed
       //code or the hotel names and locations
         //code for pdf of hotels frame
         try{
    Class.forName("com.mysql.jdbc.Driver");//registers the jdbc Driver
    con=DriverManager.getConnection(cs,user,password);
    st=con.createStatement();
      } catch(SQLException | ClassNotFoundException ex){
      ex.printStackTrace();
      }
    
    
    String RESULT="Hotel names and locations.pdf";
       
    Document document=new Document (PageSize.A5.rotate());
    try {
        PdfWriter.getInstance(document, new FileOutputStream(RESULT));//Need to write in a table
    } catch (DocumentException | FileNotFoundException ex) {
        
    }
    
       document.open();
       try{
       Image image = Image.getInstance("logo1.jpg");
       image.setAlignment(ALIGN_CENTER);
       document.add((Element) image);
       
      Paragraph p = new Paragraph("                 Tour And Travel Information Management System",FontFactory.getFont(FontFactory.TIMES_BOLD, 12, Font.ITALIC, BaseColor.BLACK));
   Paragraph p1 = new Paragraph("                   email: travellords@gmail.com");
    Paragraph p2 = new Paragraph("                  Contact us: +256 702170980/+256 777941847");
   Paragraph pp = new Paragraph(" ");
       document.add(p);
       document.add(p1);
       document.add(p2);
      document.add(pp);
    
       }catch(IOException | DocumentException ex){
       }
       PdfPTable table = new PdfPTable(2);//create table with 4 columns
        PdfPCell cell = new PdfPCell(new Paragraph("RECORDS ABOUT HOTEL NAMES AND LOCATIONS"));
       try{
       query="select hotel_name, Cities_city_name) from Hotels";
             ResultSet rs = st.executeQuery(query);
             cell.setColspan(2);
       cell.setHorizontalAlignment(Element.ALIGN_CENTER);
       cell.setBackgroundColor(BaseColor.GREEN);
       table.addCell(cell);
       table.addCell("hotel name");
       table.addCell("City name");
       while(rs.next())
       {
       table.addCell(rs.getString("hotel_name"));
        table.addCell(rs.getString("Cities_city_name"));
       }
       document.add(table);
       DateFormat df = new SimpleDateFormat("dd/MM/yy");
       Calendar calobj = Calendar.getInstance();
       String cal1 = df.format(calobj.getTime()).toString();
       
       Chunk glue1 = new Chunk(new VerticalPositionMark());
       Paragraph plot1 = new Paragraph("Generated by: MUSANJE ANTHONY LAWRENCE",FontFactory.getFont(FontFactory.TIMES_BOLD, 15, Font.ITALIC, BaseColor.BLACK));
       plot1.add(new Chunk(glue1));
       plot1.add("Date of issue: " +cal1 + "");
       document.add(plot1);
       
        document.close();
       
      
       
       if(Desktop.isDesktopSupported()){
       try{
       File myfile = new File("Hotel names and locations.pdf");
       Desktop.getDesktop().open(myfile);
             }
       catch(IOException ex){}
       }
       document.close();//close a pdf document
       
    } catch (SQLException | DocumentException ex) {
        
    }             
    }//GEN-LAST:event_jMenuItem29ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu hotel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenu jMenu7;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem13;
    private javax.swing.JMenuItem jMenuItem14;
    private javax.swing.JMenuItem jMenuItem15;
    private javax.swing.JMenuItem jMenuItem16;
    private javax.swing.JMenuItem jMenuItem17;
    private javax.swing.JMenuItem jMenuItem18;
    private javax.swing.JMenuItem jMenuItem19;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem20;
    private javax.swing.JMenuItem jMenuItem21;
    private javax.swing.JMenuItem jMenuItem22;
    private javax.swing.JMenuItem jMenuItem23;
    private javax.swing.JMenuItem jMenuItem24;
    private javax.swing.JMenuItem jMenuItem25;
    private javax.swing.JMenuItem jMenuItem26;
    private javax.swing.JMenuItem jMenuItem27;
    private javax.swing.JMenuItem jMenuItem28;
    private javax.swing.JMenuItem jMenuItem29;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    // End of variables declaration//GEN-END:variables
}
